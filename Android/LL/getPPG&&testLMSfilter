/**
 * 从txt文件中获取数据，返回数组
 * 测试LMS滤波器，返回滤波后的数据，数组。
 * @author leodon;
 */

import javafx.scene.transform.MatrixType;
import org.ujmp.core.Matrix;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class test_search {
    public static void main(String[] args) {
        ArrayList signal=getTxt("F:\\LMSfilter\\xn.txt");
        ArrayList dn=getTxt("F:\\LMSfilter\\dn.txt");
        String[] ppg=new String[signal.size()];
        String[] dn_s=new String [dn.size()];
        double[] ppg_double=new double[ppg.length];
        double[] dn_double=new double[dn_s.length];
        for(int i=0;i<signal.size();i++){
            ppg[i]= (String) signal.get(i);
        }
        for(int i=0;i<dn.size();i++){
            dn_s[i]=(String) dn.get(i);
        }
        for(int i=0;i<ppg.length;i++){
            ppg_double[i]=Double.parseDouble(ppg[i]);
        }
        for(int i=0;i<dn_s.length;i++){
            dn_double[i]=Double.parseDouble(dn_s[i]);
        }
        System.out.println(ppg_double.length);
        System.out.println(dn_double.length);
        double[] yn=new double[dn_double.length];
        LMSfilter l=new LMSfilter();
        //计算参数
        Matrix xn=Matrix.Factory.importFromArray(ppg_double);
        Matrix xn_xn=xn.mtimes(xn.transpose());
        double[][] rho_max=xn_xn.toDoubleArray();
        double rho=rho_max[0][0];
        double mu=Math.random()*(1/rho);
        yn=l.LMS(ppg_double,dn_double,20,mu);
        for(int i=0;i<yn.length;i++){
            System.out.println(yn[i]);
        }

    }
    public static ArrayList<String> getTxt(String filepath){
        try{
            String temp = null;
            File f = new File(filepath);
            String adn="";
            //指定读取编码用于读取中文
            InputStreamReader read = new InputStreamReader(new FileInputStream(f),"UTF-8");
            ArrayList<String> readList = new ArrayList<String>();
            BufferedReader reader=new BufferedReader(read);
            while((temp=reader.readLine())!=null &&!"".equals(temp)){
                readList.add(temp);
            }
            read.close();
            return readList;
        }catch (Exception e) {
            e.printStackTrace();
            System.out.println("error");
            return null;
        }
    }
}
